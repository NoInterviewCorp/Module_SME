swagger: "2.0"
info:
  description: "This is a documentation for Learning Resource Input (SME) Module which lets a SME to add, modify and delete resources for our learning system"
  version: "1.0.0"
  title: "Learning Resource Input"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "xyz@sample.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "todoapi.swagger.io"
basePath: "/sme"
tags:
- name: "sme"
  description: "For all supported technologies"
schemes:
- "https"
- "http"
paths:
  /sme:
    get:
      tags:
      - "sme"
      summary: "Get all supported technologies from api"
      operationId: "Get"
      responses:
        200:
          description: "Database returned technologies including all topics they cover but no questions"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Technology"
    post:
      tags:
        - "sme"
      summary: "Posts a technology"
      description: " Will be used to provide new technology and topics to the db"
      parameters:
      - in: "body"
        name: "body"
        description: "technology object that needs to be added "
        required: true
        schema:
          $ref: "#/definitions/Technology"
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Technology"
        404:
          description: "Not found"
    put:
      tags:
        - "sme"
      summary: "updates an already added technology"
      description: ""
      parameters:
      - in: "body"
        name: "body"
        description: "technology object that needs to be added. Should include the autogenerated id"
        required: true
        schema:
          $ref: "#/definitions/Technology"
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Technology"
        404:
          description: "Not found"
  /sme/{techName}:
    get:
      tags:
      - "sme"
      summary: "fetches technology specific information such as topics available or questions from a topic in a technology"
      operationId: "GetByName"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "techName"
        in: "path"
        description: "Technology name that needs to be considered for filter"
        required: true
        type: "string"
      - name: "bloomlevel"
        in: "query"
        summary: "what bloom level questions does the learner module is requesting for.  possible bloom levels are between 1 to 6"
        description: "use this query when you need to retrieve questions from the api"
        required: false
        type: "integer"
      - name: "topicName"
        in: "query"
        summary: "what topics does the learner needs the questions from"
        description: "use this query when you need to retrieve questions from the api"
        required: false
        type: "string"
      responses:
        200:
          description: "successful fetch of topic's data"
        400:
          description: "Invalid technology topic name"
    post:
      tags:
        - "sme"
      summary: "Posts a question to a topic"
      description: " Will be used to provide resources to a specific topic inside the selected Technology"
      parameters:
      - in: "body"
        name: "body"
        description: "Question object that needs to be added "
        required: true
        schema:
          $ref: "#/definitions/Question"
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Question"
        404:
          description: "Not found"
    put:
      tags:
        - "sme"
      summary: "updates an already added question"
      description: ""
      parameters:
      - in: "body"
        name: "body"
        description: "Question object that needs to be updated. Should include the autogenerated id "
        required: true
        schema:
          $ref: "#/definitions/Question"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/Question"
        404:
          description: "Not found"
    delete:
      tags:
        - "sme"
      summary: "deletes an already added question"
      description: ""
      parameters:
      - name: "techName"
        in: "path"
        description: "which technology has to be deleted"
        required: true
      - name: "questionId"
        in : "query"
        description: "which question is to be deleted"
        required: true
      responses:
        200:
          description: "OK"
        404:
          description: "Not found"
definitions:
  Technology:
    type: "object"
    required:
    - "TechnologyId"
    - "Name"
    - "Topics"
    properties:
      TechnologyId:
        type: "integer"
        format: "int64"
      Name:
        type: "string"
        example: "Angular"
      Topics:
        type: "array"
        items:
          $ref: "#/definitions/Topic"
    xml:
      name: "Technology"
  Topic:
    type: "object"
    required:
    - "TopicId"
    - "Name"
    - "Questions"
    properties:
      TopicId:
        type: "integer"
        format: "int64"
      Name:
        type: "string"
        example: "Unit Testing"
      Questions:
        type: "array"
        items:
          $ref: "#/definitions/Question"
      TechnologyId:
        type: "integer"
        format: "int64"
    xml:
      name: "Topic"
  Question:
    type: "object"
    required:
    - "QuestionId"
    - "ProblemStatement"
    - "Options"
    - "ResourceLink"
    - "BloomLevel"
    properties:
      QuestionId:
        type: "integer"
        format: "int64"
      ProblemStatement:
        type: "string"
        example: "What is Angular used for?"
      Options:
        type: "array"
        items:
          $ref: "#/definitions/Option"
      ResourceLink:
        type : "string"
        example: "https://your.learning.website/angular6"
      BloomLevel:
        type: "integer"
        description: "Enum of name BloomTaxonomy with possible values from 1 to 6"
        enum:
          - Knowledge
          - Comprehension
          - Application
          - Analysis
          - Synthesis
          - Evaluation
      TopicId:
        type: "integer"
        format: "int64"
    xml:
      name: "Question"
  Option:
    type: "object"
    required:
      - "Content"
      - "IsCorrect"
    properties:
      OptionID:
        type: "integer"
        format: "int64"
      Content:
        type: "string"
        example: "Option A: Angular is used as front end for APIs"
      IsCorrect:
        type: "boolean"
      QuestionId:
        type: "integer"
        format: "int64"
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"